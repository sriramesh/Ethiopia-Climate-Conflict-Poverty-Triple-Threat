addCircleMarkers(data=refugee_sites,
color='darkblue',
radius=10,
stroke = F,
popup = Name)
library(sp)
library(leaflet)
library(tidyverse)
library(rgdal)
# load shapefile
refugee_sites <- readOGR("ETH-refugee-campsites", "Eth_refugee_camps_unhcr_2019") # refugee sites
# reproject data
wgs84 <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
refugee_sites <- spTransform(refugee_sites, wgs84)
# map refugee sites
basemap <- leaflet() %>% addProviderTiles("Esri.OceanBasemap")
basemap %>%
addCircleMarkers(data=refugee_sites,
color='darkblue',
radius=10,
stroke = F,
popup = Name)
basemap %>%
addCircleMarkers(data=refugee_sites,
color='darkblue',
radius=10,
stroke = F,
popup = ~Name)
ETH_prec_2.5
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and precipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_prec_2.5 <- raster::getData(name = "worldclim", var = "prec",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_prec_2.5_Jul <- ETH_prec_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_prec_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_prec_2.5_Jul, y = ETH_Adm0)
ETH_prec_2.5_Jul_Crop <- raster::mask(x = ETH_prec_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_prec_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_prec_2.5_Jul_Crop),
na.color = NA)
# map precipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_prec_2.5_Jul_Crop,
color = raster_colorPal_prec_Jul) %>%
addLegend(title = "Jul precipitation (mm)<br>(2.5' res)",
values = values(ETH_prec_2.5_Jul_Crop),
pal = raster_colorPal_prec_Jul)
ETH_prec_2.5_Jul <- ETH_prec_2.5[[6]]
# Crop and Mask to Ethiopia extent
ETH_prec_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_prec_2.5_Jul, y = ETH_Adm0)
ETH_prec_2.5_Jul_Crop <- raster::mask(x = ETH_prec_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_prec_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_prec_2.5_Jul_Crop),
na.color = NA)
# map precipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_prec_2.5_Jul_Crop,
color = raster_colorPal_prec_Jul) %>%
addLegend(title = "Jul precipitation (mm)<br>(2.5' res)",
values = values(ETH_prec_2.5_Jul_Crop),
pal = raster_colorPal_prec_Jul)
ETH_prec_2.5 <- raster::getData(name = "worldclim", var = "tavg",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_prec_2.5_Jul <- ETH_prec_2.5[[6]]
# Crop and Mask to Ethiopia extent
ETH_prec_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_prec_2.5_Jul, y = ETH_Adm0)
ETH_prec_2.5_Jul_Crop <- raster::mask(x = ETH_prec_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_prec_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_prec_2.5_Jul_Crop),
na.color = NA)
# map precipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_prec_2.5_Jul_Crop,
color = raster_colorPal_prec_Jul) %>%
addLegend(title = "Jul precipitation (mm)<br>(2.5' res)",
values = values(ETH_prec_2.5_Jul_Crop),
pal = raster_colorPal_prec_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and precipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_prec_2.5 <- raster::getData(name = "worldclim", var = "tavg",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_prec_2.5_Jul <- ETH_prec_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_prec_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_prec_2.5_Jul, y = ETH_Adm0)
ETH_prec_2.5_Jul_Crop <- raster::mask(x = ETH_prec_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_prec_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_prec_2.5_Jul_Crop),
na.color = NA)
# map precipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_prec_2.5_Jul_Crop,
color = raster_colorPal_prec_Jul) %>%
addLegend(title = "Jul average temp (C)<br>(2.5' res)",
values = values(ETH_prec_2.5_Jul_Crop),
pal = raster_colorPal_prec_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm1 boundaries and elevation data ----
ETH_Adm_1 <- raster::getData(name = "GADM", country = "ETH", level = 1) #Adm1
ETH_elev <- raster::getData(name = "alt", country = "ETH") # Elevation (meters)
# colormap for elevation
raster_colorPal_elev <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_elev),
na.color = NA)
# plot elevation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_elev,
color = raster_colorPal_elev) %>%
addLegend(title = "Elevation<br>(meters)",
values = values(ETH_elev),
pal = raster_colorPal_elev)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and tavgipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_tavg_2.5 <- raster::getData(name = "worldclim", var = "tavg",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_tavg_2.5_Jul <- ETH_tavg_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_tavg_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_tavg_2.5_Jul, y = ETH_Adm0)
ETH_tavg_2.5_Jul_Crop <- raster::mask(x = ETH_tavg_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_tavg_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_tavg_2.5_Jul_Crop),
na.color = NA)
# map tavgipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_tavg_2.5_Jul_Crop,
color = raster_colorPal_tavg_Jul) %>%
addLegend(title = "Jul average temp (C)<br>(2.5' res)",
values = values(ETH_tavg_2.5_Jul_Crop),
pal = raster_colorPal_tavg_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and precipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_prec_2.5 <- raster::getData(name = "worldclim", var = "prec",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_prec_2.5_Jul <- ETH_prec_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_prec_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_prec_2.5_Jul, y = ETH_Adm0)
ETH_prec_2.5_Jul_Crop <- raster::mask(x = ETH_prec_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_prec_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_prec_2.5_Jul_Crop),
na.color = NA)
# map precipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_prec_2.5_Jul_Crop,
color = raster_colorPal_prec_Jul) %>%
addLegend(title = "Jul average temp (C)<br>(2.5' res)",
values = values(ETH_prec_2.5_Jul_Crop),
pal = raster_colorPal_prec_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm1 boundaries and elevation data ----
ETH_Adm_1 <- raster::getData(name = "GADM", country = "ETH", level = 1) #Adm1
ETH_elev <- raster::getData(name = "alt", country = "ETH") # Elevation (meters)
# colormap for elevation
raster_colorPal_elev <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_elev),
na.color = NA)
# plot elevation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_elev,
color = raster_colorPal_elev) %>%
addLegend(title = "Elevation<br>(meters)",
values = values(ETH_elev),
pal = raster_colorPal_elev)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and tavgipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_tavg_2.5 <- raster::getData(name = "worldclim", var = "tavg",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_tavg_2.5_Jul <- ETH_tavg_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_tavg_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_tavg_2.5_Jul, y = ETH_Adm0)
ETH_tavg_2.5_Jul_Crop <- raster::mask(x = ETH_tavg_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_tavg_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_tavg_2.5_Jul_Crop),
na.color = NA)
# map tavgipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_tavg_2.5_Jul_Crop,
color = raster_colorPal_tavg_Jul) %>%
addLegend(title = "Jul average temp (C)<br>(2.5' res)",
values = values(ETH_tavg_2.5_Jul_Crop),
pal = raster_colorPal_tavg_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and tavgipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_tavg_2.5 <- raster::getData(name = "worldclim", var = "tavg",
res = 2.5) # rasterstack
# download ETH Adm0 boundaries and tavgipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_tavg_2.5 <- raster::getData(name = "worldclim", var = "tavg",
res = 2.5) # rasterstack
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and tmeanipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_tmean_2.5 <- raster::getData(name = "worldclim", var = "tmean",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_tmean_2.5_Jul <- ETH_tmean_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_tmean_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_tmean_2.5_Jul, y = ETH_Adm0)
ETH_tmean_2.5_Jul_Crop <- raster::mask(x = ETH_tmean_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_tmean_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_tmean_2.5_Jul_Crop),
na.color = NA)
# map tmeanipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_tmean_2.5_Jul_Crop,
color = raster_colorPal_tmean_Jul) %>%
addLegend(title = "Jul average temp (C)<br>(2.5' res)",
values = values(ETH_tmean_2.5_Jul_Crop),
pal = raster_colorPal_tmean_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and precipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_prec_2.5 <- raster::getData(name = "worldclim", var = "prec",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_prec_2.5_Jul <- ETH_prec_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_prec_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_prec_2.5_Jul, y = ETH_Adm0)
ETH_prec_2.5_Jul_Crop <- raster::mask(x = ETH_prec_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_prec_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_prec_2.5_Jul_Crop),
na.color = NA)
# map precipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_prec_2.5_Jul_Crop,
color = raster_colorPal_prec_Jul) %>%
addLegend(title = "Jul average temp (C)<br>(2.5' res)",
values = values(ETH_prec_2.5_Jul_Crop),
pal = raster_colorPal_prec_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm1 boundaries and elevation data ----
ETH_Adm_1 <- raster::getData(name = "GADM", country = "ETH", level = 1) #Adm1
ETH_elev <- raster::getData(name = "alt", country = "ETH") # Elevation (meters)
# colormap for elevation
raster_colorPal_elev <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_elev),
na.color = NA)
# plot elevation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_elev,
color = raster_colorPal_elev) %>%
addLegend(title = "Elevation<br>(meters)",
values = values(ETH_elev),
pal = raster_colorPal_elev)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and tmeanipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_tmean_2.5 <- raster::getData(name = "worldclim", var = "tmean",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_tmean_2.5_Jul <- ETH_tmean_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_tmean_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_tmean_2.5_Jul, y = ETH_Adm0)
ETH_tmean_2.5_Jul_Crop <- raster::mask(x = ETH_tmean_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_tmean_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_tmean_2.5_Jul_Crop),
na.color = NA)
# map tmeanipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_tmean_2.5_Jul_Crop,
color = raster_colorPal_tmean_Jul) %>%
addLegend(title = "Jul average temp (C)<br>(2.5' res)",
values = values(ETH_tmean_2.5_Jul_Crop),
pal = raster_colorPal_tmean_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and precipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_prec_2.5 <- raster::getData(name = "worldclim", var = "prec",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_prec_2.5_Jul <- ETH_prec_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_prec_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_prec_2.5_Jul, y = ETH_Adm0)
ETH_prec_2.5_Jul_Crop <- raster::mask(x = ETH_prec_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_prec_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_prec_2.5_Jul_Crop),
na.color = NA)
# map precipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_prec_2.5_Jul_Crop,
color = raster_colorPal_prec_Jul) %>%
addLegend(title = "Jul precipitation (mm)<br>(2.5' res)",
values = values(ETH_prec_2.5_Jul_Crop),
pal = raster_colorPal_prec_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm1 boundaries and elevation data ----
ETH_Adm_1 <- raster::getData(name = "GADM", country = "ETH", level = 1) #Adm1
ETH_elev <- raster::getData(name = "alt", country = "ETH") # Elevation (meters)
# colormap for elevation
raster_colorPal_elev <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_elev),
na.color = NA)
# plot elevation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_elev,
color = raster_colorPal_elev) %>%
addLegend(title = "Elevation<br>(meters)",
values = values(ETH_elev),
pal = raster_colorPal_elev)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and tmeanipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_tmean_2.5 <- raster::getData(name = "worldclim", var = "tmean",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_tmean_2.5_Jul <- ETH_tmean_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_tmean_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_tmean_2.5_Jul, y = ETH_Adm0)
ETH_tmean_2.5_Jul_Crop <- raster::mask(x = ETH_tmean_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_tmean_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_tmean_2.5_Jul_Crop),
na.color = NA)
# map tmeanipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_tmean_2.5_Jul_Crop,
color = raster_colorPal_tmean_Jul) %>%
addLegend(title = "Jul average temp (C)<br>(2.5' res)",
values = values(ETH_tmean_2.5_Jul_Crop),
pal = raster_colorPal_tmean_Jul)
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
# download ETH Adm0 boundaries and precipitation data from worldclim.org ----
ETH_Adm0 <- raster::getData(name = "GADM", country = "ETH", level = 0)
ETH_prec_2.5 <- raster::getData(name = "worldclim", var = "prec",
res = 2.5) # rasterstack
# Restrict to Jul (rasterlayer)
ETH_prec_2.5_Jul <- ETH_prec_2.5[[7]]
# Crop and Mask to Ethiopia extent
ETH_prec_2.5_Jul_Crop_Unmasked <- raster::crop(x = ETH_prec_2.5_Jul, y = ETH_Adm0)
ETH_prec_2.5_Jul_Crop <- raster::mask(x = ETH_prec_2.5_Jul_Crop_Unmasked, mask = ETH_Adm0)
# colormap
raster_colorPal_prec_Jul <- colorNumeric(palette = topo.colors(64),
domain = values(ETH_prec_2.5_Jul_Crop),
na.color = NA)
# map precipitation
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = ETH_prec_2.5_Jul_Crop,
color = raster_colorPal_prec_Jul) %>%
addLegend(title = "Jul precipitation (mm)<br>(2.5' res)",
values = values(ETH_prec_2.5_Jul_Crop),
pal = raster_colorPal_prec_Jul)
ETH_prec_2.5_Jul_Crop
ETH_tmean_2.5_Jul
ETH_prec_2.5_Jul
ETH_tmean_2.5_Jul
# load required libraries
library(raster)
library(leaflet)
library(rgdal)
library(tidyverse)
ETH_prec_2.5_Jul_Crop
ETH_elev # precipitation raster has lower resolution than elevation raster, so must resample it
# resample elevation raster using bilinear interpolation (continuous variables)
ETH_prec_2.5_Jul_Crop_resampled <- ETH_prec_2.5_Jul_Crop %>%
raster::resample(ETH_elev, method="bilinear")
ETH_tmean_2.5_Jul_Crop_resampled <- ETH_tmean_2.5_Jul_Crop %>%
raster::resample(ETH_elev, method="bilinear")
# apply map algebra - but what function to use?
r1 <- ETH_prec_2.5_Jul_Crop_resampled
r2 <- ETH_tmean_2.5_Jul_Crop_resampled
r3 <- ETH_elev
r4 <- overlay(r1, r2, r3, fun=function(x,y,z){return(x+y+z)}) # multiplication
raster_colorPal <- colorNumeric(palette = topo.colors(64),
domain = values(r4),
na.color = NA)
leaflet() %>% # Plot
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = r4,
color = raster_colorPal) %>%
addLegend(title = "Elevation and Temp multiplied",
values = values(r4),
pal = raster_colorPal)
leaflet() %>% # Plot
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = r4,
color = raster_colorPal) %>%
addLegend(title = "Hypothetical Climate Vulnerability Index",
values = values(r4),
pal = raster_colorPal)
leaflet() %>% # Plot
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = r4,
color = raster_colorPal) %>%
addLegend(title = "Hypothetical Climate Vulnerability Score",
values = values(r4),
pal = raster_colorPal)
leaflet() %>% # Plot
addProviderTiles("CartoDB.Positron") %>%
addRasterImage(x = r4,
color = raster_colorPal) %>%
addLegend(title = "Score",
values = values(r4),
pal = raster_colorPal)
library(sp)
library(leaflet)
library(tidyverse)
library(rgdal)
# load shapefile
refugee_sites <- readOGR("ETH-refugee-campsites", "Eth_refugee_camps_unhcr_2019") # refugee sites
# reproject data
wgs84 <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
refugee_sites <- spTransform(refugee_sites, wgs84)
# map refugee sites
basemap <- leaflet() %>% addProviderTiles("Esri.OceanBasemap")
basemap %>%
addCircleMarkers(data=refugee_sites,
color='darkblue',
radius=10,
stroke = F,
popup = ~Name)
